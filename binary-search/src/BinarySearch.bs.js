// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

function binarySearch(xs, x, i) {
  var m = (xs.length >> 1);
  var len = xs.length;
  var match = xs.length;
  if (match !== 0) {
    if (match !== 1) {
      var match$1 = Caml_obj.caml_equal(x, Caml_array.caml_array_get(xs, m));
      if (match$1) {
        return /* Some */[i + m | 0];
      } else {
        var match$2 = Caml_obj.caml_lessthan(x, Caml_array.caml_array_get(xs, m));
        if (match$2) {
          return binarySearch($$Array.sub(xs, 0, m), x, i);
        } else {
          return binarySearch($$Array.sub(xs, m + 1 | 0, (len - m | 0) - 1 | 0), x, (i + m | 0) + 1 | 0);
        }
      }
    } else {
      var match$3 = Caml_obj.caml_equal(x, Caml_array.caml_array_get(xs, 0));
      if (match$3) {
        return /* Some */[i];
      } else {
        return /* None */0;
      }
    }
  } else {
    return /* None */0;
  }
}

function find(xs, x) {
  return binarySearch(xs, x, 0);
}

exports.find = find;
/* No side effect */
